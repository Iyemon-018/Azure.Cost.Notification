# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Debug'

steps:
- task: UseDotNet@2
  displayName: Use dotnet 6.0.X runtime
  inputs:
    packageType: 'sdk'
    version: '6.0.X'

- task: DotNetCoreCLI@2
  displayName: dotnet restore Azure.Cost.Notification.sln
  inputs:
    command: 'restore'
    projects: 'Azure.Cost.Notification.sln'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: dotnet build Azure.Cost.Notification.sln --configuration $(buildConfiguration)
  inputs:
    command: 'build'
    projects: 'Azure.Cost.Notification.sln'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: dotnet build Azure.Cost.Notification.sln --configuration $(buildConfiguration) --no-build
  inputs:
    command: 'test'
    projects: '**/*.Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build'

- task: DotNetCoreCLI@2
  displayName: dotnet test --configuration $(buildConfiguration) --no-build --collect "Coverage" --DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura
  inputs:
    command: 'test'
    projects: '**/*.Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build --collect "Coverage" --DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'